/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-call-name: 's-call';
$s-call-x: 0px;
$s-call-y: 21px;
$s-call-offset-x: 0px;
$s-call-offset-y: -21px;
$s-call-width: 24px;
$s-call-height: 24px;
$s-call-total-width: 88px;
$s-call-total-height: 75px;
$s-call-image: '../img/png-sprite.png';
$s-call: (0px, 21px, 0px, -21px, 24px, 24px, 88px, 75px, '../img/png-sprite.png', 's-call', );
$s-contacts-icq-name: 's-contacts-icq';
$s-contacts-icq-x: 64px;
$s-contacts-icq-y: 24px;
$s-contacts-icq-offset-x: -64px;
$s-contacts-icq-offset-y: -24px;
$s-contacts-icq-width: 17px;
$s-contacts-icq-height: 16px;
$s-contacts-icq-total-width: 88px;
$s-contacts-icq-total-height: 75px;
$s-contacts-icq-image: '../img/png-sprite.png';
$s-contacts-icq: (64px, 24px, -64px, -24px, 17px, 16px, 88px, 75px, '../img/png-sprite.png', 's-contacts-icq', );
$s-contacts-mail-name: 's-contacts-mail';
$s-contacts-mail-x: 27px;
$s-contacts-mail-y: 61px;
$s-contacts-mail-offset-x: -27px;
$s-contacts-mail-offset-y: -61px;
$s-contacts-mail-width: 15px;
$s-contacts-mail-height: 11px;
$s-contacts-mail-total-width: 88px;
$s-contacts-mail-total-height: 75px;
$s-contacts-mail-image: '../img/png-sprite.png';
$s-contacts-mail: (27px, 61px, -27px, -61px, 15px, 11px, 88px, 75px, '../img/png-sprite.png', 's-contacts-mail', );
$s-contacts-phone-name: 's-contacts-phone';
$s-contacts-phone-x: 14px;
$s-contacts-phone-y: 61px;
$s-contacts-phone-offset-x: -14px;
$s-contacts-phone-offset-y: -61px;
$s-contacts-phone-width: 13px;
$s-contacts-phone-height: 13px;
$s-contacts-phone-total-width: 88px;
$s-contacts-phone-total-height: 75px;
$s-contacts-phone-image: '../img/png-sprite.png';
$s-contacts-phone: (14px, 61px, -14px, -61px, 13px, 13px, 88px, 75px, '../img/png-sprite.png', 's-contacts-phone', );
$s-contacts-skype-name: 's-contacts-skype';
$s-contacts-skype-x: 64px;
$s-contacts-skype-y: 45px;
$s-contacts-skype-offset-x: -64px;
$s-contacts-skype-offset-y: -45px;
$s-contacts-skype-width: 15px;
$s-contacts-skype-height: 15px;
$s-contacts-skype-total-width: 88px;
$s-contacts-skype-total-height: 75px;
$s-contacts-skype-image: '../img/png-sprite.png';
$s-contacts-skype: (64px, 45px, -64px, -45px, 15px, 15px, 88px, 75px, '../img/png-sprite.png', 's-contacts-skype', );
$s-dot-name: 's-dot';
$s-dot-x: 24px;
$s-dot-y: 21px;
$s-dot-offset-x: -24px;
$s-dot-offset-y: -21px;
$s-dot-width: 24px;
$s-dot-height: 24px;
$s-dot-total-width: 88px;
$s-dot-total-height: 75px;
$s-dot-image: '../img/png-sprite.png';
$s-dot: (24px, 21px, -24px, -21px, 24px, 24px, 88px, 75px, '../img/png-sprite.png', 's-dot', );
$s-en-name: 's-en';
$s-en-x: 0px;
$s-en-y: 0px;
$s-en-offset-x: 0px;
$s-en-offset-y: 0px;
$s-en-width: 32px;
$s-en-height: 21px;
$s-en-total-width: 88px;
$s-en-total-height: 75px;
$s-en-image: '../img/png-sprite.png';
$s-en: (0px, 0px, 0px, 0px, 32px, 21px, 88px, 75px, '../img/png-sprite.png', 's-en', );
$s-loupe-name: 's-loupe';
$s-loupe-x: 0px;
$s-loupe-y: 61px;
$s-loupe-offset-x: 0px;
$s-loupe-offset-y: -61px;
$s-loupe-width: 14px;
$s-loupe-height: 14px;
$s-loupe-total-width: 88px;
$s-loupe-total-height: 75px;
$s-loupe-image: '../img/png-sprite.png';
$s-loupe: (0px, 61px, 0px, -61px, 14px, 14px, 88px, 75px, '../img/png-sprite.png', 's-loupe', );
$s-question-name: 's-question';
$s-question-x: 64px;
$s-question-y: 0px;
$s-question-offset-x: -64px;
$s-question-offset-y: 0px;
$s-question-width: 24px;
$s-question-height: 24px;
$s-question-total-width: 88px;
$s-question-total-height: 75px;
$s-question-image: '../img/png-sprite.png';
$s-question: (64px, 0px, -64px, 0px, 24px, 24px, 88px, 75px, '../img/png-sprite.png', 's-question', );
$s-ru-name: 's-ru';
$s-ru-x: 32px;
$s-ru-y: 0px;
$s-ru-offset-x: -32px;
$s-ru-offset-y: 0px;
$s-ru-width: 32px;
$s-ru-height: 21px;
$s-ru-total-width: 88px;
$s-ru-total-height: 75px;
$s-ru-image: '../img/png-sprite.png';
$s-ru: (32px, 0px, -32px, 0px, 32px, 21px, 88px, 75px, '../img/png-sprite.png', 's-ru', );
$s-social-facebook-name: 's-social-facebook';
$s-social-facebook-x: 48px;
$s-social-facebook-y: 45px;
$s-social-facebook-offset-x: -48px;
$s-social-facebook-offset-y: -45px;
$s-social-facebook-width: 16px;
$s-social-facebook-height: 16px;
$s-social-facebook-total-width: 88px;
$s-social-facebook-total-height: 75px;
$s-social-facebook-image: '../img/png-sprite.png';
$s-social-facebook: (48px, 45px, -48px, -45px, 16px, 16px, 88px, 75px, '../img/png-sprite.png', 's-social-facebook', );
$s-social-google-name: 's-social-google';
$s-social-google-x: 16px;
$s-social-google-y: 45px;
$s-social-google-offset-x: -16px;
$s-social-google-offset-y: -45px;
$s-social-google-width: 16px;
$s-social-google-height: 16px;
$s-social-google-total-width: 88px;
$s-social-google-total-height: 75px;
$s-social-google-image: '../img/png-sprite.png';
$s-social-google: (16px, 45px, -16px, -45px, 16px, 16px, 88px, 75px, '../img/png-sprite.png', 's-social-google', );
$s-social-mail-name: 's-social-mail';
$s-social-mail-x: 0px;
$s-social-mail-y: 45px;
$s-social-mail-offset-x: 0px;
$s-social-mail-offset-y: -45px;
$s-social-mail-width: 16px;
$s-social-mail-height: 16px;
$s-social-mail-total-width: 88px;
$s-social-mail-total-height: 75px;
$s-social-mail-image: '../img/png-sprite.png';
$s-social-mail: (0px, 45px, 0px, -45px, 16px, 16px, 88px, 75px, '../img/png-sprite.png', 's-social-mail', );
$s-social-odnoklassniki-name: 's-social-odnoklassniki';
$s-social-odnoklassniki-x: 48px;
$s-social-odnoklassniki-y: 21px;
$s-social-odnoklassniki-offset-x: -48px;
$s-social-odnoklassniki-offset-y: -21px;
$s-social-odnoklassniki-width: 16px;
$s-social-odnoklassniki-height: 16px;
$s-social-odnoklassniki-total-width: 88px;
$s-social-odnoklassniki-total-height: 75px;
$s-social-odnoklassniki-image: '../img/png-sprite.png';
$s-social-odnoklassniki: (48px, 21px, -48px, -21px, 16px, 16px, 88px, 75px, '../img/png-sprite.png', 's-social-odnoklassniki', );
$s-social-vkontakte-name: 's-social-vkontakte';
$s-social-vkontakte-x: 32px;
$s-social-vkontakte-y: 45px;
$s-social-vkontakte-offset-x: -32px;
$s-social-vkontakte-offset-y: -45px;
$s-social-vkontakte-width: 16px;
$s-social-vkontakte-height: 16px;
$s-social-vkontakte-total-width: 88px;
$s-social-vkontakte-total-height: 75px;
$s-social-vkontakte-image: '../img/png-sprite.png';
$s-social-vkontakte: (32px, 45px, -32px, -45px, 16px, 16px, 88px, 75px, '../img/png-sprite.png', 's-social-vkontakte', );
$spritesheet-width: 88px;
$spritesheet-height: 75px;
$spritesheet-image: '../img/png-sprite.png';
$spritesheet-sprites: ($s-call, $s-contacts-icq, $s-contacts-mail, $s-contacts-phone, $s-contacts-skype, $s-dot, $s-en, $s-loupe, $s-question, $s-ru, $s-social-facebook, $s-social-google, $s-social-mail, $s-social-odnoklassniki, $s-social-vkontakte, );
$spritesheet: (88px, 75px, '../img/png-sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
